asyncapi: 2.3.0
info:
  title: Order Service
  version: 1.0.0
  description: Order management Service
servers:
  development:
    url: development.gigantic-server.com
    description: Development server
    protocol: kafka
    protocolVersion: 0.9.1
  staging:
    url: staging.gigantic-server.com
    description: Staging server
    protocol: kafka
    protocolVersion: 0.9.1
  production:
    url: api.gigantic-server.com
    description: Production server
    protocol: kafka
    protocolVersion: 0.9.1
channels:
  orderCreated:
    publish:
      operationId: "publishOperation"
      message:
        $ref: '#/components/messages/OrderCreated'
  createOrder:
    subscribe:
      operationId: "subscribeOperation"
      message:
        $ref: '#/components/messages/CreateOrder'
components:
  messages:
    OrderCreated:
      payload:
        $ref: '#/components/schemas/OrderCreated'
    CreateOrder:
      payload:
        $ref: '#/components/schemas/CreateOrder'
  schemas:
    Waiter:
      type: object
      properties:
        ref:
          type: string
        timestamp:
          type: string
          format: 'dd/mm/yyyy hh:MM:sss'
        table:
          type: string
    CreateOrder:
      type: object
      properties:
        order:
          type: object
          properties:
            $ref: '#/components/schemas/Order'
    OrderCreated:
      type: object
      properties:
        order:
          type: object
          properties:
            $ref: '#/components/schemas/Order'
    Order:
      type: object
      properties:
        intArray:
          type: array
          items:
            type: integer
            format: int32
            example: [ 1, 2, 3 ]
    OrderLine:
      type: object
      required:
      - ref
      - products
      properties:
        ref:
          type: string
        products:
          type: array
          items:
            $ref: '#/components/schemas/OrderProduct'
    OrderProduct:
      type: object
      required:
      - ref
      - productRef
      - price
      - quantity
      properties:
        ref:
          type: string
        productRef:
          type: string
        price:
          type: string
          format: decimal
        quantity:
          type: string
          format: decimal
